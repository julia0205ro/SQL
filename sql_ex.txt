Exercise: 1
Find the model number, speed and hard drive capacity for all the PCs with prices below $500.
Result set: model, speed, hd.

Type a query:
select model, speed, hd from pc
where price < 500

Exercise: 2
List all printer makers. Result set: maker.

Type a query:
Select distinct maker from product
where type = 'printer'

Exercise: 3 
Find the model number, RAM and screen size of the laptops with prices over $1000.

Type a query:
select model, ram, screen
from laptop
where price > 1000

Exercise: 4 
Find all records from the Printer table containing data about color printers.

Type a query:
Select * from printer 
where color ='y'

Exercise: 5 
Find the model number, speed and hard drive capacity of PCs cheaper than $600 having a 12x or a 24x CD drive.

Type a query:
Select model, speed, hd
from pc
where (cd ='12x' or cd ='24x') and price < 600

Exercise: 6 
For each maker producing laptops with a hard drive capacity of 10 Gb or higher, find the speed of such laptops. Result set: maker, speed.

Type a query:
Select distinct product.maker, laptop.speed
from product
join laptop
on product.model = laptop.model
where type = 'laptop' and hd >= 10

Exercise: 7 
Get the models and prices for all commercially available products (of any type) produced by maker B.

Type a query:
select pc.model, pc.price
from product 
join pc 
on product.model = pc.model
where maker='B'
union 
select laptop.model, laptop.price
from product 
join laptop 
on product.model = laptop.model
where maker='B'
union 
select printer.model, printer.price
from product 
join printer 
on product.model=printer.model
where maker='B'

Exercise: 8 
Find the makers producing PCs but not laptops.

Type a query:
Select distinct maker from product
where type = 'PC' and maker not in (Select distinct maker from product where type='laptop')

Exercise: 9 
Find the makers of PCs with a processor speed of 450 MHz or more. Result set: maker.

Type a query:
Select distinct product.maker 
from product 
join pc 
on product.model = pc.model
where speed >= 450

Exercise: 10
Find the printer models having the highest price. Result set: model, price.

Type a query:
Select model, price
from printer
where price = (Select max(price) from printer)

Exercise: 11 
Find out the average speed of PCs.

Type a query:
Select avg(speed) as Avg_speed 
from pc

Exercise: 12 
Find out the average speed of the laptops priced over $1000.

Type a query:
Select avg(speed) from laptop 
where price > 1000

Exercise: 13 
Find out the average speed of the PCs produced by maker A.

Type a query:
Select avg(pc.speed) from pc 
join product 
on pc.model = product.model
where maker = 'A'

Exercise: 14 
For the ships in the Ships table that have at least 10 guns, get the class, name, and country.

Type a query:
Select Ships.class, Ships.name, Classes.country
from Ships join Classes
on Ships.class = Classes.class
where numGuns >= 10

Exercise: 15 
Get hard drive capacities that are identical for two or more PCs.
Result set: hd.

Type a query:
Select hd from pc 
group by (hd)
having count(model) >=2


Exercise: 16 
Get pairs of PC models with identical speeds and the same RAM capacity. Each resulting pair should be displayed only once, i.e. (i, j) but not (j, i).
Result set: model with the bigger number, model with the smaller number, speed, and RAM.

Type a query:
Select distinct A.model, B.model, A.speed, A.ram
from pc as A, pc as B
where A.model > B.model and 
A.speed = B.speed and A.ram = B.ram


Exercise: 17 
Get the laptop models that have a speed smaller than the speed of any PC.
Result set: type, model, speed.

Type a query: 
Select distinct type, laptop.model, laptop.speed
from product, laptop 
where type = 'laptop' and
speed < all(SELECT speed from pc)

Exercise: 18 
Find the makers of the cheapest color printers.
Result set: maker, price.

Type a query:
SELECT distinct product.maker, printer.price FROM printer
JOIN product ON printer.model = product.model
where printer.price = (select min(price) from printer where color = 'y') and printer.color = 'y'

Exercise: 19 
For each maker having models in the Laptop table, find out the average screen size of the laptops he produces.
Result set: maker, average screen size.

Type a query: 
Select maker, avg(laptop.screen) as average_screen_size
from laptop
join product on product.model = laptop.model
group by maker

Exercise: 20
Find the makers producing at least three distinct models of PCs.
Result set: maker, number of PC models.

Type a query: 
Select maker, count(model) as number_of_PC_models
from product 
where type = 'PC'
group by maker
having count(model) >=3

Exercise: 21
Find out the maximum PC price for each maker having models in the PC table. Result set: maker, maximum price.

Type a query: 
Select maker, max(pc.price) as maximum_price
from product 
join pc on product.model = pc.model
group by maker

Exercise: 22
For each value of PC speed that exceeds 600 MHz, find out the average price of PCs with identical speeds.
Result set: speed, average price.

Type a query:
Select speed, avg(price) as average_price
from pc 
group by speed 
having speed > 600

Exercise: 23
Get the makers producing both PCs having a speed of 750 MHz or higher and laptops with a speed of 750 MHz or higher.
Result set: maker

Select maker from product 
left join laptop on product.model = laptop.model
where laptop.speed>=750
intersect
Select maker from product 
left join pc on product.model = pc.model
where pc.speed>= 750

Exercise: 24
List the models of any type having the highest price of all products present in the database.

Type a query:
with the_highest_price as (
select model, price from pc
where pc.price = (select max(price) from pc)
union
select model, price from laptop
where laptop.price = (select max(price) from laptop)
union
select model, price from printer
where printer.price = (select max(price) from printer)
)
select model from the_highest_price
where price = (select max(price) from the_highest_price)

Exercise: 25 
Find the printer makers also producing PCs with the lowest RAM capacity and the highest processor speed of all PCs having the lowest RAM capacity.
Result set: maker.

Type a query:
Select maker from product 
where type = 'Printer'
intersect
Select maker from product 
join pc on product.model = pc.model
where pc.ram = (select min(ram) from pc) and 
pc.speed = (select max(speed) from pc where ram = (select min(ram) from pc))

Exercise: 26
Find out the average price of PCs and laptops produced by maker A.
Result set: one overall average price for all items.

Type a query:
with average_pc_lap as (
select price from pc
join product on pc.model = product.model
where maker = 'A'
union all
select price from laptop
join product on laptop.model = product.model
where maker = 'A'
)
Select avg(price) from average_pc_lap

Exercise: 27
Find out the average hard disk drive capacity of PCs produced by makers who also manufacture printers.
Result set: maker, average HDD capacity.

Type a query: 
Select maker, avg(pc.hd) as average_HDD_capacity from product 
join pc on product.model = pc.model
where maker in (
Select maker from product 
where type = 'PC'
intersect
Select maker from product 
where type = 'Printer'
)
group by maker

Exercise: 28 
Using Product table, find out the number of makers who produce only one model.

Type a query: 
Select count(*) from (select maker from product 
group by maker 
having count(model)=1)
as helped_table

Exercise: 31 
For ship classes with a gun caliber of 16 in. or more, display the class and the country.

Type a query:
Select class, country from Classes
where bore >= 16

Exercise: 33 
Get the ships sunk in the North Atlantic battle.
Result set: ship.

Type a query:
Select ship from Outcomes 
where result = 'sunk'
and battle = 'North Atlantic'

Exercise: 34
In accordance with the Washington Naval Treaty concluded in the beginning of 1922, it was prohibited to build battle ships with a displacement of more than 35 thousand tons.
Get the ships violating this treaty (only consider ships for which the year of launch is known).
List the names of the ships.

Type a query:
Select name from (
Select distinct Ships.name, Ships.launched, Classes.displacement, Classes.type
from Ships, Classes
where Ships.class = Classes.class
) as helped_table(name, launched, displacement, type)
where launched >= 1922 and 
displacement > 35000 and 
type = 'bb'

Exercise: 35 
Find models in the Product table consisting either of digits only or Latin letters (A-Z, case insensitive) only.
Result set: model, type.

Type a query: 
Select model, type from product 
where model not like '%[^0-9]%' or
model not like '%[^A-Z]%'

Exercise: 36
List the names of lead ships in the database (including the Outcomes table).

Type a query: 
Select name from Ships
where name = class
union
Select A from (
Select Outcomes.ship as A from Ships
full join Outcomes 
on Ships.name = Outcomes.ship
where Ships.name is null) as helped_table, Classes
where A = Classes.class


Exercise: 37
Find classes for which only one ship exists in the database (including the Outcomes table).

Type a query:
Select * from (
select Classes.class as unique_class from Classes
join Ships on Classes.class = Ships.class
union all
select distinct Classes.class as unique_class from Classes
join Outcomes on Classes.class=Outcomes.ship
where ship not in (Select name from Ships)
) as helped_table
group by unique_class
having count(unique_class) = 1

Exercise: 38 
Find countries that ever had classes of both battleships (‘bb’) and cruisers (‘bc’).

Type a query:
Select country from Classes 
where type = 'bb'
intersect
Select country from Classes 
where type = 'bc'

Exercise: 39
Find the ships that `survived for future battles`; that is, after being damaged in a battle, they participated in another one, which occurred later.

Type a query:
Select distinct ship as survived_for_future_battles from (
Select ship, date from Outcomes
join Battles 
on Outcomes.battle = Battles.name
where result in ('damaged') 
) as first_table
join ( 
Select ship as helped_ship, date as helped_date from Outcomes
join Battles 
on Outcomes.battle = Battles.name
) as second_table
on first_table.ship = second_table.helped_ship
where first_table.date < second_table.helped_date